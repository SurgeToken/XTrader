{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "peggedToken",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "thename",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "thesymbol",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_sellFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_buyFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_transferFee",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "who",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "nTokens",
						"type": "uint256"
					}
				],
				"name": "ErasedTokens",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_token",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "calculatePrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newPCSAddress",
						"type": "address"
					}
				],
				"name": "changePancakeswapRouterAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "geUnlockTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBuyFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSellFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenQuantityInContract",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTransferFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					}
				],
				"name": "getValueOfHoldings",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenToWithdraw",
						"type": "address"
					}
				],
				"name": "liquifyTheMistakesOfOthers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "lock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenAmount",
						"type": "uint256"
					}
				],
				"name": "sell",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sellFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "transferFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
				},
				"balanceOf(address)": {
					"details": "Returns the amount of tokens owned by `account`."
				},
				"decimals()": {
					"details": "Returns the number of decimal places"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"calculatePrice()": {
					"notice": "Returns the Current Price of the Token "
				},
				"changePancakeswapRouterAddress(address)": {
					"notice": "Incase Pancakeswap Upgrades To V3 "
				},
				"getBuyFee()": {
					"notice": "Buy Fee "
				},
				"getFees()": {
					"notice": "List all fees "
				},
				"getSellFee()": {
					"notice": "Sell Fee "
				},
				"getTokenQuantityInContract()": {
					"notice": "Amount of BNB in Contract "
				},
				"getTransferFee()": {
					"notice": "Transfer Fee "
				},
				"getValueOfHoldings(address)": {
					"notice": "Returns the value of your holdings before the 6% sell fee "
				},
				"liquifyTheMistakesOfOthers(address)": {
					"notice": "Liquifies tokens that were incorrectly sent to contract "
				},
				"sell(uint256)": {
					"notice": "Sells SURGE Tokens And Deposits the BNB into Seller's Address "
				},
				"transfer(address,uint256)": {
					"notice": "Transfer Function "
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Transfer Function "
				}
			},
			"notice": "Contract: Surge Token Developed By: Markymark (aka SafemoonMark) Liquidity-less Token, DEX built into Contract Send BNB to contract and it mints Surge Token to your receive Address Sell this token by interacting with contract directly Price is calculated as a ratio between Total Supply and underlying asset in Contract",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"NativeSurge.sol": "NativeSurge"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"NativeSurge.sol": {
			"keccak256": "0x4fa7f724d9a89188d7742148b493d2f3a52620aa4c8689d8e32bada41e75103f",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6c646e0c71563690916dc4becdfe2f36d896f47308fe85953739980ebf4bb51",
				"dweb:/ipfs/QmWGnX1C8xMsQA8eu9iSJmKiLU3pb3mTZ8CaQgAfwaeozR"
			]
		},
		"lib/Address.sol": {
			"keccak256": "0xd75022ced4c5a4301be96946a479d4b54e23167bd4519d972e6bf2aaa4c324df",
			"license": "MIT",
			"urls": [
				"bzz-raw://9997ee2499d2310427167c0b762b6b5db1b96124677566f506f10c24159a45c3",
				"dweb:/ipfs/QmbxjVGKQSmFVuZEVUTEkTmxcYYKozV1SMxQTR8jbjHyxF"
			]
		},
		"lib/Context.sol": {
			"keccak256": "0xbfdf530d8079b90858b7299e7806e8db6cc4f844fe3fb2690787801ef5ad25f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://c4452815ad96a955c076ff9b1ffebb9ef8aec01f026ed7471c98512c4fe68bbe",
				"dweb:/ipfs/QmULVQJcpGxotndtNdLzZ2ERMvpBBjipmJQneFjHcfWT83"
			]
		},
		"lib/IERC20.sol": {
			"keccak256": "0x00771f50d00f3f2c8fb4ffdfc75e5beffa3f9bf059e99130d8183974969e8ad2",
			"license": "MIT",
			"urls": [
				"bzz-raw://3fc8060ba364235e00c00980589865200080258c3a28434275b2accc9f12dc30",
				"dweb:/ipfs/QmV3JUNgzr6T5sMCFPteTxpufdtDWWVMfQtijKmjQWykdB"
			]
		},
		"lib/IUniswapV2Router02.sol": {
			"keccak256": "0xa33061884635833661ae4a2b4b833f022c6e122ddff117c12c1d1275ed7de8a2",
			"license": "MIT",
			"urls": [
				"bzz-raw://c940d8410249554a8d848c4967aae0bd4ed67e5de1ac275c1947a15bf2e0ffc4",
				"dweb:/ipfs/QmTDzPGYzyiSrHKJxBQjhH3qDtnjq5T4EMbEb4LjkBS3bc"
			]
		},
		"lib/Ownable.sol": {
			"keccak256": "0xf7ebfacd1bbbb9afe87c5ca93c4459e5be35a04de9ca92891c0be3e103eebfda",
			"license": "MIT",
			"urls": [
				"bzz-raw://8c8098b29b2bf2e488e14b6ad3e855c5720c7e7f359951aac74d4b9b327c82a0",
				"dweb:/ipfs/QmZEdBvPZdp4DxLLYPgqz5wofPjYm8SEa3PJue32gzZ2f3"
			]
		},
		"lib/SafeMath.sol": {
			"keccak256": "0x0291b4b1cce14e52a40328a0bdfcf77b90ca2e57b033112a28082071c54e6a3b",
			"license": "MIT",
			"urls": [
				"bzz-raw://ca9b4c1a1770c85768b5cb705bd566a0fd12e0171582010785ec256e2c3f2be2",
				"dweb:/ipfs/QmdkrVuPqh6t2YXSfnB2Lci5UiteXPN6Hwg4zFza8sDgR4"
			]
		}
	},
	"version": 1
}
